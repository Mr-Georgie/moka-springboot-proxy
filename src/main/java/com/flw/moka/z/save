// public Refunds checkIfRefundExistInDB(ProductRequest productRequest, String method) {

//     String refundReference = productRequest.getTransactionReference();

//     Optional<Refunds> findRefund = refundsEntityService.getRefundByRefundReference(refundReference);

//     if (findRefund.isPresent()) {

//         if (findRefund.get().getResponseCode().equals("03") && findRefund.get().getBalance() == 0) {
//             ProxyResponse proxyResponse = prepareResponseIfSuccessfulRefundsExist(refundReference, method);
//             proxyResponse.setResponseMessage("This has been refunded");
//             logsUtil.setLogs(proxyResponse, productRequest, method);

//             throw new TransactionMethodAlreadyDoneException(proxyResponse.getResponseMessage());
//         }

//         if (findRefund.get().getLastRefund() == false) {
//             ProxyResponse proxyResponse = prepareResponseIfSuccessfulRefundsExist(refundReference, method);
//             proxyResponse.setResponseMessage("Please provide the latest refund reference");
//             logsUtil.setLogs(proxyResponse, productRequest, method);

//             throw new TransactionMethodAlreadyDoneException(proxyResponse.getResponseMessage());
//         }

//         Refunds existingRefund = computeRefundedAmount(findRefund, productRequest);

//         return existingRefund;

//     } else {

//         Optional<Refunds> findRefundByTransactionReference = refundsEntityService
//                 .findFirstTransactionOccurrence(refundReference);

//         if (findRefundByTransactionReference.isPresent()
//                 && !findRefundByTransactionReference.get().getResponseCode().equals("RR")) {

//             if (findRefundByTransactionReference.get().getBalance() == 0) {
//                 ProxyResponse proxyResponse = prepareResponseIfSuccessfulRefundsExist(refundReference, method);
//                 proxyResponse.setResponseMessage("This has been refunded");
//                 logsUtil.setLogs(proxyResponse, productRequest, method);

//                 throw new TransactionMethodAlreadyDoneException(proxyResponse.getResponseMessage());
//             }

//             ProxyResponse proxyResponse = prepareResponseIfSuccessfulRefundsExist(refundReference, method);
//             proxyResponse.setResponseMessage("Please provide the refund reference for this transaction");
//             logsUtil.setLogs(proxyResponse, productRequest, method);

//             throw new TransactionMethodAlreadyDoneException(proxyResponse.getResponseMessage());
//         }

//         Refunds refund = new Refunds();

//         if (productRequest.getAmount() != null) {
//             refund.setRefundedAmount(productRequest.getAmount());
//         }

//         refund.setRefundReference(refundReference);
//         refund.setResponseCode("RR");
//         refund.setResponseMessage("Initiating refund...");

//         return refund;
//     }
// }
